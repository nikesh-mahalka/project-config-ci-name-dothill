- job-template:
    name: 'dsvm-tempest-full-s-fc'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 125
          fail: true
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe

          function pre_test_hook {{
              echo "Install thirdparty client libraries" 
              #TODO: update your client here if needed, otherwise delete
              echo "Acquire::http::proxy \"http://172.16.2.50:3142\";" | sudo tee /etc/apt/apt.conf.d/01proxy
              sudo apt-get update
              /opt/nodepool-scripts/install_fc_drivers.sh
              export FC_PROVIDER="172.16.2.12"
              export FC_PROVIDER_USER=vedams
              export FC_PROVIDER_KEY=/opt/nodepool-scripts/jenkins_hpkey
              export FC_PROVIDER_RC=/home/vedams/keystonerc_jenkins
              /opt/nodepool-scripts/invoke-fc-passthrough.sh
              echo "Configure the local.conf file to properly setup hpmsa driver in cinder.conf"
              cat <<EOF >$BASE/new/devstack/local.conf

          [[post-config|\$CINDER_CONF]]
          [DEFAULT]
          enabled_backends=hpmsa
          default_volume_type=hpmsa
          ENABLED_SERVICES=c-api,c-sch,c-vol,cinder,dstat,g-api,g-reg,horizon,key,mysql,n-api,n-cond,n-cpu,n-crt,n-net,n-obj,n-sch,rabbit,tempest
          # Disable security groups entirely
          Q_USE_SECGROUP=False
          LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver
          #CINDER_PERIODIC_INTERVAL=10
          CINDER_SECURE_DELETE=False
          API_RATE_LIMIT=False
          [hpmsa]
          # add you driver configuration here
          volume_driver=cinder.volume.drivers.san.hp.hpmsa_fc.HPMSAFCDriver
          volume_backend_name=hpmsa
          san_ip = 172.16.2.100
          san_login = manage
          san_password = !manage
          #dothill_iscsi_ips = 172.16.20.10
          #dothill_use_chap=true
          #dothill_chap_password=1234567891011
          hpmsa_backend_type=realstor
          hpmsa_backend_name=dg03
          hpmsa_wbi_protocol='http'

          # Use post-extra because the tempest configuration file is
          # overwritten with the .sample after post-config.
          [[post-extra|\$TEMPEST_CONFIG]]
          [volume]
          storage_protocol=FC
          vendor_name="HPMSA"
          EOF

              echo "Configure localrc file to properly setup CINDER_ENABLED_BACKENDS"
              cat <<EOF >>$BASE/new/devstack/localrc
          CINDER_ENABLED_BACKENDS=hpmsa:hpmsa
          EOF
    
          cd $BASE/new/cinder
          git fetch https://review.openstack.org/openstack/cinder refs/changes/07/187707/4 && git cherry-pick FETCH_HEAD
          #git fetch https://review.openstack.org/openstack/cinder refs/changes/65/177665/5 && git cherry-pick FETCH_HEAD 
          #git fetch https://review.openstack.org/openstack/cinder refs/changes/65/177665/5 && git checkout FETCH_HEAD
          }}

          export -f pre_test_hook

          # To keep our CINDER_ENABLED_BACKENDS configuration in localrc
          export KEEP_LOCALRC=true

          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=120
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX='^(?=.*volume*)(?!tempest.thirdparty.boto.test_ec2_instance.*)(?!tempest.scenario.test_volume_boot_pattern.*)(?!tempest.scenario.test_minimum_basic.*)'
          export TEMPEST_CONCURRENCY=2

          # Let's use the http protocol instead of git protocol
          # export GIT_BASE="http://github.com"
          export GIT_BASE="https://review.openstack.org/p"

          if [ -z $ZUUL_PROJECT ]; then
              export ZUUL_PROJECT=openstack-dev/ci-sandbox
          fi
          if [ -z $ZUUL_BRANCH ]; then
              export ZUUL_BRANCH=master
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: 'dsvm-tempest-full-s-iscsi'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 125
          fail: true
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe

          function pre_test_hook {{
              echo "Acquire::http::proxy \"http://172.16.2.50:3142\";" | sudo tee /etc/apt/apt.conf.d/01proxy
              sudo apt-get update
              echo "Configure the local.conf file to properly setup hpmsa driver in cinder.conf"
              cat <<EOF >$BASE/new/devstack/local.conf

          [[post-config|\$CINDER_CONF]]
          [DEFAULT]
          enabled_backends=hpmsa
          default_volume_type=hpmsa
          #ENABLED_SERVICES=c-api,c-sch,c-vol,cinder,dstat,g-api,g-reg,horizon,key,mysql,n-api,n-cond,n-cpu,n-crt,n-net,n-obj,n-sch,rabbit,tempest
          # Disable security groups entirely
          Q_USE_SECGROUP=False
          LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver
          #CINDER_PERIODIC_INTERVAL=10
          CINDER_SECURE_DELETE=False
          API_RATE_LIMIT=False
          [hpmsa]
          # add you driver configuration here
          volume_driver=cinder.volume.drivers.san.hp.hpmsa_iscsi.HPMSAISCSIDriver
          volume_backend_name=hpmsa
          san_ip = 172.16.2.100
          san_login = manage
          san_password = !manage
          hmpsa_iscsi_ips = 172.16.2.190
          hpmsa_backend_type=realstor
          hpmsa_backend_name=dg04
          hpmsa_wbi_protocol='http'

          # Use post-extra because the tempest configuration file is
          # overwritten with the .sample after post-config.
          [[post-extra|\$TEMPEST_CONFIG]]
          [volume]
          storage_protocol=iSCSI
          vendor_name="HPMSA"
          EOF

              echo "Configure localrc file to properly setup CINDER_ENABLED_BACKENDS"
              cat <<EOF >>$BASE/new/devstack/localrc
          CINDER_ENABLED_BACKENDS=hpmsa:hpmsa
          #FLOATING_RANGE=172.16.2.160/29
          EOF

          cd $BASE/new/cinder
          git fetch https://review.openstack.org/openstack/cinder refs/changes/07/187707/4 && git cherry-pick FETCH_HEAD
                
          #cd $BASE/new/cinder
          #git fetch https://review.openstack.org/openstack/cinder refs/changes/65/177665/5 && git cherry-pick FETCH_HEAD 
          #git fetch https://review.openstack.org/openstack/cinder refs/changes/65/177665/5 && git checkout FETCH_HEAD
          }}

          export -f pre_test_hook

          # To keep our CINDER_ENABLED_BACKENDS configuration in localrc
          #export KEEP_LOCALRC=true

          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=120
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX='^(?=.*volume*)(?!tempest.thirdparty.boto.test_ec2_instance.*)(?!tempest.scenario.test_volume_boot_pattern.*)(?!tempest.scenario.test_minimum_basic.*)'
          export TEMPEST_CONCURRENCY=2

          # Let's use the http protocol instead of git protocol
          # export GIT_BASE="http://github.com"
          export GIT_BASE="https://review.openstack.org/p"

          if [ -z $ZUUL_PROJECT ]; then
              export ZUUL_PROJECT=openstack-dev/ci-sandbox
          fi
          if [ -z $ZUUL_BRANCH ]; then
              export ZUUL_BRANCH=master
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log
